apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: crypto-forecasting
  labels:
    environment: dev
data:
  POSTGRES_DB: crypto_forecasting
  POSTGRES_USER: crypto
  POSTGRES_PASSWORD: crypto123
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: crypto-forecasting
  labels:
    environment: dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi  # Reduced size for dev
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: crypto-forecasting
  labels:
    app: postgres
    environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        envFrom:
        - configMapRef:
            name: postgres-config
        ports:
        - containerPort: 5432
        resources:
          limits:
            cpu: 200m     # Reduced for dev
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: crypto-forecasting
  labels:
    app: postgres
    environment: dev
spec:
  type: NodePort  # Use NodePort for dev access
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30432  # Fixed port for dev access
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: crypto-forecasting
  labels:
    environment: dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi  # Reduced size for dev
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: crypto-forecasting
  labels:
    app: redis
    environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        command: ["redis-server", "--appendonly", "yes"]
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          limits:
            cpu: 100m     # Reduced for dev
            memory: 256Mi
          requests:
            cpu: 50m      # Lower requests for dev
            memory: 128Mi
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: crypto-forecasting
  labels:
    app: redis
    environment: dev
spec:
  type: NodePort  # Use NodePort for dev access
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
      nodePort: 30379  # Fixed port for dev access